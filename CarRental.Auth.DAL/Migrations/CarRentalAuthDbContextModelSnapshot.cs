// <auto-generated />
using System;
using CarRental.Auth.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRental.Auth.DAL.Migrations
{
    [DbContext(typeof(CarRentalAuthDbContext))]
    partial class CarRentalAuthDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.PermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac8c1ccb-871e-4802-b998-08e4a5d7f933"),
                            Name = "None"
                        },
                        new
                        {
                            Id = new Guid("dce04e14-aac2-4fbf-b3f5-38bbfc05718a"),
                            Name = "ReadOnly"
                        },
                        new
                        {
                            Id = new Guid("4a47bab0-da9f-465f-b2ce-95abefab4371"),
                            Name = "ReadWrite"
                        });
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.RolePermissionsEntity", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("529e960f-79c9-4e25-b3ef-a5ce8cbb42bc"),
                            PermissionId = new Guid("4a47bab0-da9f-465f-b2ce-95abefab4371")
                        },
                        new
                        {
                            RoleId = new Guid("765f9e20-fb70-4837-8b22-5d280ad9d2d2"),
                            PermissionId = new Guid("ac8c1ccb-871e-4802-b998-08e4a5d7f933")
                        },
                        new
                        {
                            RoleId = new Guid("765f9e20-fb70-4837-8b22-5d280ad9d2d2"),
                            PermissionId = new Guid("dce04e14-aac2-4fbf-b3f5-38bbfc05718a")
                        },
                        new
                        {
                            RoleId = new Guid("7350e0d2-2a91-42ce-bfe8-d882eff2ce3d"),
                            PermissionId = new Guid("dce04e14-aac2-4fbf-b3f5-38bbfc05718a")
                        },
                        new
                        {
                            RoleId = new Guid("6894d1ff-f40c-418e-b560-f6670e8b1e4e"),
                            PermissionId = new Guid("ac8c1ccb-871e-4802-b998-08e4a5d7f933")
                        });
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.RolesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("529e960f-79c9-4e25-b3ef-a5ce8cbb42bc"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("765f9e20-fb70-4837-8b22-5d280ad9d2d2"),
                            Name = "Manager"
                        },
                        new
                        {
                            Id = new Guid("7350e0d2-2a91-42ce-bfe8-d882eff2ce3d"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("6894d1ff-f40c-418e-b560-f6670e8b1e4e"),
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac100f97-6db1-42ba-b3ad-a0881b167e50"),
                            Name = "admin",
                            PasswordHash = new byte[] { 181, 84, 124, 37, 29, 213, 104, 49, 23, 119, 81, 223, 212, 186, 99, 229, 82, 121, 173, 94, 50, 22, 36, 133, 97, 212, 90, 66, 218, 141, 26, 38 },
                            PasswordSalt = new byte[] { 57, 30, 177, 188, 87, 211, 11, 164, 251, 176, 81, 15, 148, 114, 195, 20, 168, 124, 158, 140, 37, 230, 116, 209, 134, 177, 144, 51, 140, 1, 248, 214, 75, 12, 254, 49, 231, 228, 72, 9, 114, 252, 166, 89, 75, 75, 154, 157, 128, 185, 157, 206, 198, 81, 134, 15, 167, 243, 45, 16, 182, 68, 49, 82 },
                            RefreshToken = "",
                            TokenCreated = new DateTime(2024, 6, 21, 8, 52, 27, 698, DateTimeKind.Utc).AddTicks(1229),
                            TokenExpires = new DateTime(2024, 6, 22, 8, 52, 27, 698, DateTimeKind.Utc).AddTicks(1235)
                        },
                        new
                        {
                            Id = new Guid("3877311a-f26e-4913-b28c-79fb64dc92d9"),
                            Name = "user",
                            PasswordHash = new byte[] { 11, 91, 53, 170, 250, 35, 125, 132, 65, 17, 196, 128, 96, 115, 12, 106, 9, 102, 16, 203, 43, 214, 92, 186, 183, 50, 56, 82, 127, 72, 179, 200 },
                            PasswordSalt = new byte[] { 154, 110, 32, 11, 239, 76, 122, 39, 249, 96, 21, 35, 98, 195, 203, 29, 89, 240, 213, 114, 233, 46, 41, 189, 66, 54, 81, 72, 233, 18, 184, 146, 253, 94, 150, 3, 166, 218, 64, 100, 209, 21, 216, 3, 13, 148, 195, 234, 79, 109, 66, 174, 3, 69, 255, 153, 217, 28, 158, 229, 65, 101, 138, 218 },
                            RefreshToken = "",
                            TokenCreated = new DateTime(2024, 6, 21, 8, 52, 27, 698, DateTimeKind.Utc).AddTicks(1241),
                            TokenExpires = new DateTime(2024, 6, 22, 8, 52, 27, 698, DateTimeKind.Utc).AddTicks(1243)
                        });
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.UserPermissionsEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermissions");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ac100f97-6db1-42ba-b3ad-a0881b167e50"),
                            PermissionId = new Guid("4a47bab0-da9f-465f-b2ce-95abefab4371")
                        },
                        new
                        {
                            UserId = new Guid("3877311a-f26e-4913-b28c-79fb64dc92d9"),
                            PermissionId = new Guid("dce04e14-aac2-4fbf-b3f5-38bbfc05718a")
                        });
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.UserRolesEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ac100f97-6db1-42ba-b3ad-a0881b167e50"),
                            RoleId = new Guid("529e960f-79c9-4e25-b3ef-a5ce8cbb42bc")
                        },
                        new
                        {
                            UserId = new Guid("3877311a-f26e-4913-b28c-79fb64dc92d9"),
                            RoleId = new Guid("7350e0d2-2a91-42ce-bfe8-d882eff2ce3d")
                        });
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.RolePermissionsEntity", b =>
                {
                    b.HasOne("CarRental.Auth.DAL.Context.Entities.PermissionEntity", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarRental.Auth.DAL.Context.Entities.RolesEntity", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.UserPermissionsEntity", b =>
                {
                    b.HasOne("CarRental.Auth.DAL.Context.Entities.PermissionEntity", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Auth.DAL.Context.Entities.UserEntity", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.UserRolesEntity", b =>
                {
                    b.HasOne("CarRental.Auth.DAL.Context.Entities.RolesEntity", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Auth.DAL.Context.Entities.UserEntity", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.PermissionEntity", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.RolesEntity", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CarRental.Auth.DAL.Context.Entities.UserEntity", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
